!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var i=t();for(var s in i)("object"==typeof exports?exports:e)[s]=i[s]}}(self,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t);const i={version:"2004v3",init:!1,finished:!1,_time:{startTime:void 0,getSessionTime:()=>{let e;return i._time.startTime&&(e=(new Date).getTime()-i._time.startTime.getTime()),i._time.convert(e)},end:void 0,convert:e=>{let t=e%1e3,i=(e-t)/1e3%60,s=(e-t-1e3*i)/6e4%60,o=(e-t-1e3*i-6e4*s)/36e5;1e4==o&&(o=9999,s=(e-36e5*o)/6e4,100==s&&(s=99),s=Math.floor(s),i=(e-36e5*o-6e4*s)/1e3,100==i&&(i=99),i=Math.floor(i),t=e-36e5*o-6e4*s-1e3*i);let n="PT"+o+"H"+s+"M"+i+"S";return o>9999&&(n="9999:99:99"),n}},API:null,getError:e=>{e=null==e||e;const[t,s]=i.isInitialized();if(!t)return{error:!0,message:"Service is not initialized"};const o=s.GetLastError(),n={id:o,message:s.GetErrorString(o),stack:s.GetDiagnostic(o)};if(e){console.error(`Error:\n${JSON.stringify(n,null,2)}`);const e=new CustomEvent("scormError",{detail:n});return document.dispatchEvent(e),{error:!0,data:n}}return{error:!1,data:n}},commit:()=>{console.debug("API.Commit");const[e,t]=i.isInitialized();return e&&t?(i.setValue("cmi.session_time",i._time.getSessionTime()),t.Commit(""),[!1]):(console.warn("Unable to get location: service not initialized"),[!0])},exit:()=>(console.debug("API.Exit"),i.commit()),isInitialized:()=>(i.init=!1,i.API?"false"===i.API.Initialized?(console.error("API failed to initialize"),[i.init,!1]):(i.init=!0,[i.init,i.API]):(console.error("MISSING_SCORM_API - INIT"),[i.init,!1])),updateLocation:(e,t)=>{console.debug("API.UpdateLocation");const[s,o]=i.isInitialized();return s&&o?(i.setValue("cmi.location",JSON.stringify({v1:1,...e,slideId:t})),i.commit(),[!1]):(console.warn("Unable to get location: service not initialized"),[!0])},getLocation:()=>{console.debug("API.GetLocation");const[e,t]=i.isInitialized();if(!e||!t)return console.warn("Unable to get location: service not initialized"),[!0,{}];try{const[e,t]=i.getValue("cmi.location");return e||!t?[!0,{}]:[!1,JSON.parse(t)]}catch(e){return console.error(e),[!0,{}]}},getSuspendData:()=>{console.debug("API.GetSuspendData");const[e,t]=i.isInitialized();if(!e||!t)return console.warn("Unable to get suspend data: service not initialized"),[!0,{}];try{const[e,t]=i.getValue("cmi.suspend_data");return e||!t?[!0,{}]:[!1,t]}catch(e){return console.error(e),[!0,{}]}},setCourseStart:()=>{console.debug("API.SetCourseStart");const[e,t]=i.isInitialized();return e&&t?(i.setValue("cmi.suspend_data",JSON.stringify({courseStarted:!0})),i.commit(),[!1]):(console.warn("Unable to update suspend data: service not initialized"),[!0,{}])},getProgress:()=>{console.debug("API.GetProgress");const[e,t]=i.isInitialized();if(!e||!t)return console.warn("Unable to get progress: service not initialized"),[!0,{}];try{const[e,t]=i.getValue("cmi.progress_measure");return e||!t?[!0,{}]:[!1,t]}catch(e){return console.error(e),[!0,{}]}},updateProgress:e=>{console.debug("API.UpdateProgress");const[t,s]=i.isInitialized();if(!t||!s)return console.warn("Unable to update progress: service not initialized"),[!0];const[o,n]=i.getValue("cmi.progress_measure");return o&&"403"===n.data.id&&(i.setValue("cmi.progress_measure",e),i.commit()),o||((!n||0===parseFloat(n)||e>parseFloat(n))&&i.setValue("cmi.progress_measure",e),i.commit()),[!1]},start:e=>{console.debug("API.Start 2004v3"),i.API=e,i._time.startTime=new Date,i.API?.Initialize("");const[t,s]=i.isInitialized();if(!t||!s)return[!0];const[o,n]=i.getValue("cmi.completion_status");if(o)return[!0];if("unknown"===n){i.setValue("cmi.completion_status","incomplete"),i.setValue("cmi.success_status","unknown"),i.setValue("cmi.suspend_data","{}"),i.setValue("cmi.progress_measure",0);const e={cur:{m:0,l:0,s:0},max:{m:0,l:0,s:0}};i.setValue("cmi.location",JSON.stringify(e))}else i.setValue("cmi.success_status",i.getValue("cmi.success_status")[1]),i.setValue("cmi.progress_measure",i.getValue("cmi.progress_measure")[1]),i.setValue("cmi.completion_status",i.getValue("cmi.completion_status")[1]);return i.setValue("cmi.exit","suspend"),i.commit(),console.debug("runtime started"),[!1]},finish:()=>{console.debug("API.Finish");const[e,t]=i.isInitialized();return e&&t?(i.setValue("cmi.score.min",0),i.setValue("cmi.score.max",100),i.setValue("cmi.score.scaled",1),i.setValue("cmi.score.raw",100),i.setValue("cmi.success_status","passed"),i.setValue("cmi.progress_measure",1),i.setValue("cmi.completion_status","completed"),i.commit(),t.Terminate(""),[!1]):(console.warn("Unable to finish: service not initialized"),[!0])},setValue:(e,t)=>{console.debug(`API.SetValue for ${e} to ${t}`);const[s,o]=i.isInitialized();return s&&o?(void 0!==t?"false"===o.SetValue(e,t)&&i.getError(!0):console.warn(`Unable to set value for ${e}: value undefined`),[!1]):(console.warn(`Unable to set value for ${e}: service not initialized`),[!0])},getValue:e=>{console.debug(`API.GetValue for ${e}`);const[t,s]=i.isInitialized();if(!t||!s)return console.warn(`Unable to set value for ${e}: service not initialized`),[!0,""];const o=s.GetValue(e);return""===o&&(console.error(`API failed to get value for: ${e}`),i.getError(!0)),[!1,o]}},s={version:"1.2",init:!1,finished:!1,_time:{startTime:void 0,getSessionTime:()=>{let e;return s._time.startTime&&(e=(new Date).getTime()-s._time.startTime.getTime()),s._time.convert(e)},end:void 0,convert:e=>{function t(e,t){let i=new String(e);const s=i.length;if(s>t)return i.substr(0,t);for(let e=s;e<t;e++)i="0"+i;return i}let i=e%1e3,s=(e-i)/1e3%60,o=(e-i-1e3*s)/6e4%60,n=(e-i-1e3*s-6e4*o)/36e5;1e4==n&&(n=9999,o=(e-36e5*n)/6e4,100==o&&(o=99),o=Math.floor(o),s=(e-36e5*n-6e4*o)/1e3,100==s&&(s=99),s=Math.floor(s),i=e-36e5*n-6e4*o-1e3*s);let r=t(n,4)+":"+t(o,2)+":"+t(s,2);return n>9999&&(r="9999:99:99"),r}},API:null,getError:e=>{e=null==e||e;const[t,i]=s.isInitialized();if(!t)return{error:!0,message:"Service is not initialized"};const o=i.LMSGetLastError(),n={id:o,message:i.LMSGetErrorString(o),stack:i.LMSGetDiagnostic(o)};if(e){console.error(`Error:\n${JSON.stringify(n,null,2)}`);const e=new CustomEvent("scormError",{detail:n});document.dispatchEvent(e)}return{error:!1,data:n}},commit:()=>{console.debug("API.Commit");const[e,t]=s.isInitialized();return e&&t?(s.setValue("cmi.core.session_time",s._time.getSessionTime()),t.LMSCommit(""),[!1]):(console.warn("Unable to get location: service not initialized"),[!0])},exit:()=>(console.debug("API.Exit"),s.commit()),isInitialized:()=>(s.init=!1,s.API?"false"===s.API.Initialized?(console.error("API failed to initialize"),[s.init,!1]):(s.init=!0,[s.init,s.API]):(console.error("MISSING_SCORM_API - INIT"),[s.init,!1])),updateLocation:(e,t)=>{console.debug("API.UpdateLocation");const[i,o]=s.isInitialized();return i&&o?(s.setValue("cmi.core.lesson_location",JSON.stringify({v1:1,...e,slideId:t})),s.commit(),[!1]):(console.warn("Unable to get location: service not initialized"),[!0])},getLocation:()=>{console.debug("API.GetLocation");const[e,t]=s.isInitialized();if(!e||!t)return console.warn("Unable to get location: service not initialized"),[!0,{}];try{const[e,t]=s.getValue("cmi.core.lesson_location");return e||!t?[!0,{}]:[!1,JSON.parse(t)]}catch(e){return console.error(e),[!0,{}]}},setCourseStart:()=>{console.debug("API.SetCourseStart");const[e,t]=s.isInitialized();return e&&t?(s.setValue("cmi.suspend_data",JSON.stringify({courseStarted:!0})),s.commit(),[!1]):(console.warn("Unable to set suspend data: service not initialized"),[!0,{}])},getSuspendData:()=>{console.debug("API.GetSuspendData");const[e,t]=s.isInitialized();if(!e||!t)return console.warn("Unable to get suspend data: service not initialized"),[!0,{}];try{const[e,t]=s.getValue("cmi.suspend_data");return e||!t?[!0,{}]:[!1,t]}catch(e){return console.error(e),[!0,{}]}},getProgress:()=>{console.debug("API.GetProgress");const[e,t]=s.isInitialized();if(!e||!t)return console.warn("Unable to get progress: service not initialized"),[!0,{}];try{const[e,t]=s.getValue("cmi.suspend_data");return e||!t?[!0,{}]:[!1,t]}catch(e){return console.error(e),[!0,{}]}},updateProgress:e=>{console.debug("API.UpdateProgress");const[t,i]=s.isInitialized();if(!t||!i)return console.warn("Unable to update progress: service not initialized"),[!0];const[o,n]=s.getValue("cmi.suspend_data");return o&&"403"===n.data.id&&(s.setValue("cmi.suspend_data",e),s.commit()),o||((!n||0===parseFloat(n)||e>parseFloat(n))&&s.setValue("cmi.suspend_data",e),s.commit()),[!1]},start:e=>{console.debug("API.Start 1.2"),s._time.startTime=new Date,s.API=e,s.API?.LMSInitialize("");const[t,i]=s.isInitialized();if(!t||!i)return[!0];const[o,n]=s.getValue("cmi.core.lesson_status");if(o)return[!0];if("unknown"===n||"not attempted"===n){s.setValue("cmi.core.lesson_status","incomplete"),s.setValue("cmi.suspend_data",0);const e={cur:{m:0,l:0,s:0},max:{m:0,l:0,s:0}};s.setValue("cmi.core.lesson_location",JSON.stringify(e))}else s.setValue("cmi.core.lesson_status",s.getValue("cmi.core.lesson_status")[1]),s.setValue("cmi.suspend_data",s.getValue("cmi.suspend_data")[1]);return s.setValue("cmi.core.exit","suspend"),s.commit(),console.debug("runtime started"),[!1]},finish:()=>{console.debug("API.Finish");const[e,t]=s.isInitialized();return e&&t?(s.setValue("cmi.core.score.raw",100),s.setValue("cmi.core.lesson_status","passed"),s.setValue("cmi.suspend_data",1),s.commit(),t.LMSFinish(""),[!1]):(console.warn("Unable to finish: service not initialized"),[!0])},setValue:(e,t)=>{console.debug(`API.SetValue for ${e} to ${t}`);const[i,o]=s.isInitialized();return i&&o?(void 0!==t?"false"===o.LMSSetValue(e,t)&&s.getError(!0):console.warn(`Unable to set value for ${e}: value undefined`),[!1]):(console.warn(`Unable to set value for ${e}: service not initialized`),[!0])},getValue:e=>{console.debug(`API.GetValue for ${e}`);const[t,i]=s.isInitialized();if(!t||!i)return console.warn(`Unable to set value for ${e}: service not initialized`),[!0,""];const o=i.LMSGetValue(e);return""===o&&(console.error(`API failed to get value for: ${e}`),s.getError(!0)),[!1,o]}},o={API:null,version:"1.2",_scanApi:(e,t)=>{let i=0;for(;null==e[t]&&null!=e.parent&&e.parent!=e;){if(i++,i>7)return alert("Error finding API -- too deeply nested."),null;e=e.parent}return e[t]},start:e=>{let t;switch(e){case i.version:t=o._scanApi(window,"API_1484_11"),o.version=e,Object.assign(o,i);break;case s.version:default:t=o._scanApi(window,"API"),o.version=e,Object.assign(o,s)}return t?(o.API=t,o.start(t),[!0]):(console.error("Unable to start scorm runtime service"),[!1])}};return window.Scrowl=window.Scrowl||{},window.Scrowl.runtime=o,t})()));
//# sourceMappingURL=scrowl.runtime.js.map