{"version":3,"file":"scrowl.template-two-column.component.js","mappings":"2LAIA,MAAMA,EAAS,EAAGC,QAAOC,YAAWC,UAASC,OAAMC,SAAQC,mBACzD,MAAMC,EAASC,OAAe,OACxBC,EAAWF,EAAOG,KAAKD,SAC7B,IAAIE,EAAiB,YACjBC,EAAc,YAEdN,IAAiB,GAAGL,cACtBU,GAAkB,aAGhBL,IAAiB,GAAGL,WACtBW,GAAe,aAqBjB,OACE,yBAAKV,UAAWA,GACd,wBAAIA,UAAWS,EAAgBE,YApBR,KACrBR,GACFE,EAAOG,KAAKI,KAAKC,YAAY,CAC3BC,KAAM,QACNf,MAAO,GAAGA,a,GAiBTE,EAAQc,OAEX,yBAAKf,UAAWU,EAAaC,YAdT,KAClBR,GACFE,EAAOG,KAAKI,KAAKC,YAAY,CAC3BC,KAAM,QACNf,MAAO,GAAGA,U,GAWV,kBAACQ,EAAQ,KAAEL,EAAKa,QAGrB,EAGGC,EAAY,EAAGC,KAAIC,YAAWC,MAClC,MAAMd,EAASC,OAAe,OAC9B,IACIc,EAAgB,iBACpB,MAAMC,IAAWF,EAAME,SACjBjB,EAAeiB,EAAWF,EAAMf,aAAe,KAC/CkB,EAAY,GAAGL,eACfM,EAAUL,EAAOM,QAAQD,QACzBE,EAAYF,EAAQC,QAAQC,UAAUV,MACtCW,EAAkBH,EAAQC,QAAQE,gBAAgBX,MAClDY,EAAgBJ,EAAQC,QAAQG,cAAcZ,MAC9Ca,EAAcV,EAAOM,QAAQI,YAAYJ,QACzCK,EAAeX,EAAOM,QAAQK,aAAaL,QAC3CM,EAAcZ,EAAOM,QAAQM,YAAYN,QACzCO,EAAmBb,EAAOc,eAAeC,mBAAmBlB,MAElE,GAAIY,EACF,OAAQD,GACN,KAAK,EACHN,GAAiB,qBACjB,MACF,KAAK,EACHA,GAAiB,uBACjB,MACF,KAAK,EACHA,GAAiB,uBASvB,OAJIK,IACFL,GAAiB,IAAIK,KAIrB,kBAACpB,EAAOG,KAAK0B,SAAQ,CACnBjB,GAAI,SAASK,IACbtB,UAnCU,uBAoCVmC,WAAUJ,KACNZ,GAEJ,yBAAKF,GAAIK,GACP,yBAAKtB,UAAWoB,GACd,kBAACtB,EAAM,CACLK,OAAQkB,EACRjB,aAAcA,EACdJ,UAAU,sBACVD,MAAM,cACNE,QAAS2B,EAAY3B,QACrBC,KAAM0B,EAAY1B,OAEnBwB,GAAmB,GAClB,kBAAC5B,EAAM,CACLK,OAAQkB,EACRjB,aAAcA,EACdJ,UAAU,uBACVD,MAAM,eACNE,QAAS4B,EAAa5B,QACtBC,KAAM2B,EAAa3B,OAGtBwB,GAAmB,GAClB,kBAAC5B,EAAM,CACLK,OAAQkB,EACRjB,aAAcA,EACdJ,UAAU,sBACVD,MAAM,cACNE,QAAS6B,EAAY7B,QACrBC,KAAM4B,EAAY5B,SAM7B,C","sources":["webpack://@scrowl/template-two-column/./src/two-column.tsx"],"sourcesContent":["import React from 'react';\nimport './_index.scss';\nimport { TwoColumnProps } from './two-column.types';\n\nconst Column = ({ field, className, heading, body, isEdit, focusElement }) => {\n  const Scrowl = window['Scrowl'];\n  const Markdown = Scrowl.core.Markdown;\n  let headingClasses = `can-focus`;\n  let bodyClasses = `can-focus`;\n\n  if (focusElement === `${field}.heading`) {\n    headingClasses += ' hasFocus';\n  }\n\n  if (focusElement === `${field}.body`) {\n    bodyClasses += ' hasFocus';\n  }\n\n  const handleFocusHeading = () => {\n    if (isEdit) {\n      Scrowl.core.host.sendMessage({\n        type: 'focus',\n        field: `${field}.heading`,\n      });\n    }\n  };\n\n  const handleFocusBody = () => {\n    if (isEdit) {\n      Scrowl.core.host.sendMessage({\n        type: 'focus',\n        field: `${field}.body`,\n      });\n    }\n  };\n\n  return (\n    <div className={className}>\n      <h2 className={headingClasses} onMouseDown={handleFocusHeading}>\n        {heading.value}\n      </h2>\n      <div className={bodyClasses} onMouseDown={handleFocusBody}>\n        <Markdown>{body.value}</Markdown>\n      </div>\n    </div>\n  );\n};\n\nconst TwoColumn = ({ id, schema, ...props }: TwoColumnProps) => {\n  const Scrowl = window['Scrowl'];\n  let classes = `template-two-columns`;\n  let columnClasses = 'column-wrapper';\n  const editMode = props.editMode ? true : false;\n  const focusElement = editMode ? props.focusElement : null;\n  const contentId = `${id}-two-column`;\n  const options = schema.content.options;\n  const alignment = options.content.alignment.value;\n  const numberOfColumns = options.content.numberOfColumns.value;\n  const stackOnMobile = options.content.stackOnMobile.value;\n  const firstColumn = schema.content.firstColumn.content;\n  const secondColumn = schema.content.secondColumn.content;\n  const thirdColumn = schema.content.thirdColumn.content;\n  const disableAnimation = schema.controlOptions.disableAnimations?.value;\n\n  if (stackOnMobile) {\n    switch (numberOfColumns) {\n      case 3:\n        columnClasses += ' stacked-view-wide';\n        break;\n      case 2:\n        columnClasses += ' stacked-view-narrow';\n        break;\n      case 1:\n        columnClasses += ' stacked-view-single';\n        break;\n    }\n  }\n\n  if (alignment) {\n    columnClasses += ` ${alignment}`;\n  }\n\n  return (\n    <Scrowl.core.Template\n      id={`slide-${contentId}`}\n      className={classes}\n      notScene={disableAnimation ? true : false}\n      {...props}\n    >\n      <div id={contentId}>\n        <div className={columnClasses}>\n          <Column\n            isEdit={editMode}\n            focusElement={focusElement}\n            className=\"column first-column\"\n            field=\"firstColumn\"\n            heading={firstColumn.heading}\n            body={firstColumn.body}\n          />\n          {numberOfColumns >= 2 && (\n            <Column\n              isEdit={editMode}\n              focusElement={focusElement}\n              className=\"column second-column\"\n              field=\"secondColumn\"\n              heading={secondColumn.heading}\n              body={secondColumn.body}\n            />\n          )}\n          {numberOfColumns >= 3 && (\n            <Column\n              isEdit={editMode}\n              focusElement={focusElement}\n              className=\"column third-column\"\n              field=\"thirdColumn\"\n              heading={thirdColumn.heading}\n              body={thirdColumn.body}\n            />\n          )}\n        </div>\n      </div>\n    </Scrowl.core.Template>\n  );\n};\n\nexport { TwoColumn as default };"],"names":["Column","field","className","heading","body","isEdit","focusElement","Scrowl","window","Markdown","core","headingClasses","bodyClasses","onMouseDown","host","sendMessage","type","value","TwoColumn","id","schema","props","columnClasses","editMode","contentId","options","content","alignment","numberOfColumns","stackOnMobile","firstColumn","secondColumn","thirdColumn","disableAnimation","controlOptions","disableAnimations","Template","notScene"],"sourceRoot":""}